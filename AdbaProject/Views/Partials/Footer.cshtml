@inherits Umbraco.Web.Mvc.UmbracoViewPage<Site>
@using Umbraco.Web.Models

<!-- Footer section start -->
<footer class="section footer-variant-2 footer-modern context-dark">
    <div class="footer-variant-2-content">
        <div class="container">
            <div class="row row-40 justify-content-between">
                @{
                    var contacts = Model.Value<IEnumerable<IPublishedElement>>("footer_Contacts");
                    if (contacts != null)
                    {
                        foreach (var socialContent in contacts)
                        {
                            var element = (IPublishedElement)socialContent;
                            var socalHeading = element.Value<string>("heading");
                            var iconData = element.Value<IEnumerable<IPublishedElement>>("iconData");
                            <div class="col-sm-6 col-lg-4 col-xl-3">
                                <div class="oh-desktop">
                                    <div class="inset-top-18">
                                        <h5 class="text-spacing-75">@socalHeading</h5>
                                        <ul class="footer-contacts d-inline-block d-md-block">
                                            @foreach (var iconContent in iconData)
                                            {
                                                var icon = iconContent.Value("icon");
                                                var iconTitle = iconContent.Value<string>("iconTitle");
                                                var iconLinks = iconContent.Value<Link>("iconLink");
                                                <li>
                                                    <div class="unit unit-spacing-xs">
                                                        <div class="unit-left"><span class="icon fa @icon"></span></div>
                                                        <div class="unit-body">
                                                            @if (!string.IsNullOrEmpty(iconTitle) && iconTitle != null)
                                                            {
                                                                <p>@iconTitle</p>
                                                            }
                                                            else
                                                            {
                                                                <a class="link-phone" href="@iconLinks.Url">@iconLinks.Name</a>
                                                            }
                                                        </div>

                                                    </div>
                                                </li>
                                            }
                                        </ul>

                                    </div>
                                </div>
                            </div>
                        }
                    }
                    var newsletters = Model.Value<IEnumerable<IPublishedElement>>("footer_Newsletters");
                    if (newsletters != null)
                    {
                        foreach (var newsLetterContent in newsletters)
                        {
                            var NewsHeading = newsLetterContent.Value<string>("heading");
                            var iconData = newsLetterContent.Value<IEnumerable<IPublishedElement>>("iconData");
                            <div class="col-sm-6 col-lg-4 col-xl-4">
                                <div class="oh-desktop">
                                    <div class="inset-top-18">
                                        <h5 class="text-spacing-75">@NewsHeading</h5>
                                        @foreach (var newscontent in iconData)
                                        {
                                            var newslettersdata = newscontent.Value<string>("iconTitle");
                                            <p>@newslettersdata</p>
                                            <form class="rd-form rd-mailform" data-form-output="form-output-global" data-form-type="subscribe" method="post" action="#">
                                                <div class="form-wrap">
                                                    <input class="form-input" id="subscribe-form-5-email" type="email" name="email" data-constraints="">
                                                    <label class="form-label" for="subscribe-form-5-email">Enter Your E-mail</label>
                                                </div>
                                                <button class="button button-block button-secondary button-ujarak" type="submit">Subscribe</button>
                                            </form>
                                        }


                                    </div>
                                </div>
                            </div>

                        }

                    }

                    var SocialLinks = Model.Value<IEnumerable<IPublishedElement>>("footer_SocialLinks");
                    if (SocialLinks != null)
                    {
                        foreach (var socialData in SocialLinks)
                        {
                            var socalHeading = socialData.Value<string>("heading");
                            var iconData = socialData.Value<IEnumerable<IPublishedElement>>("iconData");
                            <div class="col-lg-4 col-xl-4">
                                <div class="oh-desktop">
                                    <div class="inset-top-18">
                                        <h5 class="text-spacing-75">@socalHeading</h5>
                                        <div class="row row-10 gutters-10">
                                            <div>
                                                <ul class="list-inline list-inline-xs footer-social-list-2">
                                                    @foreach (var sociallink in iconData)
                                                    {
                                                        var icon = sociallink.Value("icon");
                                                        var iconLinks = sociallink.Value<Link>("iconLink");
                                                        <li>
                                                            <a class="icon fa @icon" href="@iconLinks.Url" target="@iconLinks.Target"></a>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
            </div>
        </div>
    </div>
    <div class="footer-variant-2-bottom-panel">
        <div class="container">
            <!-- Rights-->
            <div class="text-center">
                @Model.Value("footer_CopyRight")
            </div>
        </div>
    </div>
</footer>
<!-- Footer section end -->